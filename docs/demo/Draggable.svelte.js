import './Draggable.svelte.css.proxy.js';
/* demo/Draggable.svelte generated by Svelte v3.44.0 */
import {
	SvelteComponent,
	attr,
	detach,
	init,
	insert,
	listen,
	noop,
	run_all,
	safe_not_equal,
	svg_element
} from "../_snowpack/pkg/svelte/internal.js";

function create_fragment(ctx) {
	let circle;
	let mounted;
	let dispose;

	return {
		c() {
			circle = svg_element("circle");
			attr(circle, "cx", /*left*/ ctx[0]);
			attr(circle, "cy", /*top*/ ctx[1]);
			attr(circle, "class", "handle svelte-x5qldl");
			attr(circle, "r", "15");
		},
		m(target, anchor) {
			insert(target, circle, anchor);

			if (!mounted) {
				dispose = [
					listen(window, "mousemove", /*move*/ ctx[5]),
					listen(window, "mouseup", /*stop*/ ctx[3]),
					listen(window, "touchmove", /*touchmove*/ ctx[4], { passive: false }),
					listen(window, "touchend", /*stop*/ ctx[3]),
					listen(circle, "mousedown", /*start*/ ctx[2]),
					listen(circle, "touchstart", /*start*/ ctx[2])
				];

				mounted = true;
			}
		},
		p(ctx, [dirty]) {
			if (dirty & /*left*/ 1) {
				attr(circle, "cx", /*left*/ ctx[0]);
			}

			if (dirty & /*top*/ 2) {
				attr(circle, "cy", /*top*/ ctx[1]);
			}
		},
		i: noop,
		o: noop,
		d(detaching) {
			if (detaching) detach(circle);
			mounted = false;
			run_all(dispose);
		}
	};
}

function instance($$self, $$props, $$invalidate) {
	let { left } = $$props;
	let { top } = $$props;
	let { onChange } = $$props;
	let moving = false;
	let previousTouch;

	function start(e) {
		previousTouch = e.touches && e.touches[0];
		moving = true;
	}

	function stop() {
		moving = false;
	}

	function touchmove(e) {
		if (moving) {
			e.preventDefault();
			const touch = e.touches[0];
			const movementX = touch.pageX - previousTouch.pageX;
			const movementY = touch.pageY - previousTouch.pageY;
			console.log(movementX, movementY);
			onChange({ movementX, movementY });
			previousTouch = touch;
		}
	}

	function move(e) {
		if (moving) {
			onChange(e);
		}
	}

	$$self.$$set = $$props => {
		if ('left' in $$props) $$invalidate(0, left = $$props.left);
		if ('top' in $$props) $$invalidate(1, top = $$props.top);
		if ('onChange' in $$props) $$invalidate(6, onChange = $$props.onChange);
	};

	return [left, top, start, stop, touchmove, move, onChange];
}

class Draggable extends SvelteComponent {
	constructor(options) {
		super();
		init(this, options, instance, create_fragment, safe_not_equal, { left: 0, top: 1, onChange: 6 });
	}
}

export default Draggable;